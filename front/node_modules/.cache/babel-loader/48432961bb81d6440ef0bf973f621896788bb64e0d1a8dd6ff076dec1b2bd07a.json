{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Desktop\\\\easfefh\\\\Pruebas\\\\Api-react\\\\front\\\\src\\\\Componentes\\\\Disco.js\",\n  _s = $RefreshSig$();\nimport { useParams, useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaginaDisco(_ref) {\n  _s();\n  let {\n    Discos,\n    DiscosCargados\n  } = _ref;\n  console.log(DiscosCargados);\n  const disco = useLoaderData();\n  //console.log(disco)\n\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: DiscosCargados && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Disco: \", Discos[id].titulo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(PaginaDisco, \"4cA7uMzdJo+i1SOvtuPTqga/hGA=\", false, function () {\n  return [useLoaderData, useParams];\n});\n_c = PaginaDisco;\nexport const LoaderDisco = async _ref2 => {\n  let {\n    params\n  } = _ref2;\n  const {\n    id\n  } = params;\n  const res = await fetch('http://localhost:5000/api');\n  if (!res.ok) {\n    throw Error('No se pudo encontrar el disco.');\n  }\n  return res.json();\n};\n_c2 = LoaderDisco;\nvar _c, _c2;\n$RefreshReg$(_c, \"PaginaDisco\");\n$RefreshReg$(_c2, \"LoaderDisco\");","map":{"version":3,"names":["useParams","useLoaderData","jsxDEV","_jsxDEV","PaginaDisco","_ref","_s","Discos","DiscosCargados","console","log","disco","id","children","titulo","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoaderDisco","_ref2","params","res","fetch","ok","Error","json","_c2","$RefreshReg$"],"sources":["C:/Users/santi/Desktop/easfefh/Pruebas/Api-react/front/src/Componentes/Disco.js"],"sourcesContent":["import { useParams , useLoaderData } from \"react-router-dom\";\r\n\r\n\r\nexport default function PaginaDisco ({Discos , DiscosCargados}) {\r\nconsole.log(DiscosCargados)\r\n\r\n    const disco = useLoaderData()\r\n//console.log(disco)\r\n\r\n    const {id} = useParams()\r\n    \r\n    \r\n    return (\r\n        <div> \r\n         {DiscosCargados && <h1>Disco: {Discos[id].titulo}</h1>}\r\n        </div>\r\n     );\r\n}\r\n\r\nexport const LoaderDisco = async({params}) => {\r\n    const {id} = params\r\n\r\n    const res = await fetch('http://localhost:5000/api')\r\n\r\n    \r\n\r\n    if (!res.ok) {\r\n        throw Error('No se pudo encontrar el disco.')\r\n    }\r\n    return res.json()\r\n}\r\n\r\n \r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAGC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7D,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA6B;EAAAC,EAAA;EAAA,IAA3B;IAACC,MAAM;IAAGC;EAAc,CAAC,GAAAH,IAAA;EAC9DI,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;EAEvB,MAAMG,KAAK,GAAGV,aAAa,EAAE;EACjC;;EAEI,MAAM;IAACW;EAAE,CAAC,GAAGZ,SAAS,EAAE;EAGxB,oBACIG,OAAA;IAAAU,QAAA,EACEL,cAAc,iBAAIL,OAAA;MAAAU,QAAA,GAAI,SAAO,EAACN,MAAM,CAACK,EAAE,CAAC,CAACE,MAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjD;AAEd;AAACZ,EAAA,CAduBF,WAAW;EAAA,QAGjBH,aAAa,EAGdD,SAAS;AAAA;AAAAmB,EAAA,GANFf,WAAW;AAgBnC,OAAO,MAAMgB,WAAW,GAAG,MAAAC,KAAA,IAAmB;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,KAAA;EACrC,MAAM;IAACT;EAAE,CAAC,GAAGU,MAAM;EAEnB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2BAA2B,CAAC;EAIpD,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;IACT,MAAMC,KAAK,CAAC,gCAAgC,CAAC;EACjD;EACA,OAAOH,GAAG,CAACI,IAAI,EAAE;AACrB,CAAC;AAAAC,GAAA,GAXYR,WAAW;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}